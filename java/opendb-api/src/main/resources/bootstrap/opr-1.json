{
	"block_id":-1,
	"date":"2019-02-15T00:00:00.000Z",
	"ops": [
		{
			"type" : "sys.signup",
			"signed_by": "openplacereviews",
			"new": [{	
				"id": ["openplacereviews"],
				"name" : "openplacereviews",
				"algo": "EC",
				"auth_method": "provided",
				"pubkey": "base64:X.509:MFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAEOR7zRAwYHy2vmJhOxrwNCUGI23NldhKV+kuBK5Jsah2gyHX4jNqkryksrmNHUjFogNttjilhFwG78HT64KLgcw=="
			}],
			"hash": "json:sha256:10c5978d2466b67505d2d94a9a0f29695e03bf11893a4a5cac3cd700aa757dd9",
			"signature": "ECDSA:base64:MEUCIQDjwKWF4BTeDdILZKq51eBt7VW0fkCBggCT0DDRd7hpFgIgdnKccY5yMoHaL2FWbMWqGZlvzvF76oacrlbqBmQDYBo="
		},
		{
			"type" : "sys.login",
			"signed_by": "openplacereviews",
			"ref" : {
				"s" : ["sys.signup","openplacereviews"]
			},
			"new" : [{	
				"id" : ["openplacereviews","test_1"],
				"algo" : "EC",
				"auth_method" : "provided",
				"pubkey": "base64:X.509:XXXwEAYHKoZIzj0CAQYFK4EEAAoDQgAETxKWXg3jhSxBtYhTxO/zMj6S0jO95ETUehlZ7yR150gFSmxqJcLE4YQDZ6t/Hn13kmaZbhSFMNsAX+kbeUMqb=="
			}],
			"hash": "json:sha256:fefffd95ccaa8b2545f2c5b8e1e7ae8c7d8f530b8d61be60df2345d74102c802",
			"signature": "ECDSA:base64:MEUCIQDbaIttXUkJCqiR61b39u6xr9xxOPw/XOM2no+04XrPlgIgOrAwPOVIh9oL8wb4FvWA0Fcx0SpqOK6P3GfPHLmTQ60="
		},
		{
			"type" : "sys.login",
			"signed_by": "openplacereviews",
			"ref" : {
				"s" : ["sys.signup","openplacereviews"]
			},
			"old" : ["fefffd95ccaa8b2545f2c5b8e1e7ae8c7d8f530b8d61be60df2345d74102c802:0"],
			"new": [{	
				"id": ["openplacereviews","test_1"],
				"algo": "EC",
				"auth_method": "provided",
				"pubkey": "base64:X.509:MFYwEAYHKoZIzj0CAQYFK4EEAAoDQgAETxKWXg3jhSxBtYhTxO/zMj6S0jO95ETUehlZ7yR150gFSmxqJcLE4YQDZ6t/Hn13kmaZbhSFMNsAX+kbeUMqbQ=="
			}],
			
			"hash": "json:sha256:41b132e7832099d14bf501606a969ba2a84ad2c46125b1c6470df709481d94b6",
			"signature": "ECDSA:base64:MEYCIQDCuwakI7jd0bExEDnnKc4X41oS2hbj0XwRfuSgXqu6/gIhAKQSlPt9amGgHz20yiES87vOt4i3/BFDu3IrGgIlz8AM"
		},


		{
			"type" : "sys.operation",
			"new": [{
				"id" : ["sys.operation"],
				"comment" : "Operation to define other operations with description and fields",
				"version" : 0,
				"versioning" : true,
				"fields": {
					"id" : "operation name usually written as <package_name>.<op_name>",
					"fields" : "map of fields accepted by operation with their description",
					"arity" : "integer number describing arity of operation, 0 - means that operation could create/delete 0 or 1 object maximum.",
					"versioning" : "defines whether object should have subsequent version field",
					"comment" : "description of the operation, purpose and how it could be used",
					"version" : "int version of the defined operation"	
				}
			}]
		},
		{
			"type" : "sys.operation",
			"new": [{
				"id" : ["sys.signup"],
				"comment" : "Operation to signup new users with different methods such as password, provided secure key or oauth.",
				"version" : 0,
				"arity" : 0,
				"fields": {
					"id" : "unique id of user",
					"algo" : "crypto algorithm of generated public key",
					"auth_method" : "one of 'pwd', 'provided' (provided private key),'oauth' ",
					"keygen_method" : "keygen algorithm of private key from password applicable to .auth_method pwd",
					"oauth_provider" : "one of 'fb', 'osm', 'google'",
					"oauthid_hash" : "hash of 'oauth id + salt' ",
					"pubkey" : "public key to be used to validate signature",
					"salt" : "salt used for private key generation from password and for hash of oauthid_hash",
					"userdetails" : "custom json map of user details"
				}
			}]
		},
		{
			"type" : "sys.operation",
			"new": [{	
				"id" : ["sys.login"],
				"comment" : "Operation to create login pair of private key",
				"version" : 0,
				"arity" : 0,
				"fields": {
					"id" : "combined id 'signup_name':'purpose', purpose could describe website, bot name or application",
					"algo" : "crypto algorithm of generated public key",
					"auth_method" : "one of 'provided' (provided or generated private key), 'oauth' ",
					"pubkey" : "public key to be used to validate signature"
				}
			}]
		},
		{
			"type" : "sys.operation",
			"new": [{	
				"id" : ["sys.validate"],
				"comment" : "Operation that defines validation on blockchain operations",
				"version" : 0,
				"arity" : 0,
				"fields": {
					"id" : "TODO"
				}
			}]
		},
		{
			"type" : "sys.operation",
			"new": [{	
				"id" : ["sys.role"],
				"comment" : "Operation that defines role for user, role restriction are defined by validation operations",
				"version" : 0,
				"arity" : 0,
				"fields": {
					"id" : "TODO"
				}
			}]
		},
		{
			"type" : "sys.operation",
			"new": [{
				"id" : ["sys.grant"],
				"comment" : "Operation that assigns user to a specific role",
				"version" : 0,
				"arity" : 0,
				"fields": {
					"id" : "TODO"
				}
			}]
		},



		{
			"type"  : "sys.role",
			"new" : [{
				"id" : ["owner"],
				"comment" : "Owner role is a super role that nobody could change it",
				"owner_role" : "none",
				"super_roles": []
			}]
		},
		{
			"type" : "sys.role",
			"new" : [{ 
				"id"	: ["master"],
				"comment"   : "Role master and only owner could change it",
				"owner_role" : "owner",
				"super_roles" : ["owner"]
			}]
		},
		{
			"type" : "sys.role",
			"new" : [{ 
				"id"	: ["registrator"],
				"comment"   : "Role registrator for user signup and only owner could change it",
				"owner_role" : "owner",
				"super_roles" : ["master"]
			}]
		},

		{  
			"type" : "sys.grant",
			"new" : [{ 
				"id" : ["openplacereviews"],
				"roles" : ["owner"]
			}]
		},

		{  
			"type" : "sys.validate",
			"new" : [{ 
				"id" : ["validate_op_type_registered_easy"],
				"type" : ["*"],
				"comment" : "Validate that operation is registered - TODO delete",
				"role" : "owner",
				"validate" : [
					"blc:find('sys.operation',.type)"
				]
			}]
		},
		{  
			"type" : "sys.validate",
			"new" : [{ 
				"id" : ["validate_op_type_registered"],
				"type" : ["*"],
				"comment" : "Validate that operation is registered",
				"role" : "owner",
				"validate" : [
					"std:eq(.ref.op.id,.type)"
				]
			}]
		},
		{  
			"type" : "sys.validate",
			"new" : [{ 
				"id" : ["validate_op_arity"],
				"type" : ["*"],
				"comment" : "Validate operation arity",
				"role" : "none",
				"if" : [
					"std:eq(.ref.op.arity, 0)"
				],
				"validate" : [
					"std:leq(std:size(.new),1)",
					"std:leq(std:size(.old),1)"
				]
			}]
		},
		{  
			"type" : "sys.validate",
			"new" : [{ 
				"id" : ["validate_new_validation"],
				"type" : ["sys.validate"],
				"comment" : "Validate new validation. It is strict and nobody could change it",
				"role" : "none",
				"validate" : [
					"std:eq(std:size(.new),1)",
					"std:leq(std:size(.old),1)"
				]
			}]
		},
		{  
			"type" : "sys.validate",
			"new" : [{ 
				"id" : ["validate_validation_changes"],
				"type" : ["sys.validate"],
				"comment" : "Validate validation changes. Check previous role. It is strict and nobody could change it",
				"role" : "none",
				"if" : [
					"std:eq(std:size(.old), 1)"
				],
				"validate" : [
					"auth:one_has_role(.old.role, .signed_by)",
					"std:eq(.new.id,.old.id)"
				]
			}]
		},
		{
			"type" : "sys.validate",
			"new" : [{
				"id" : ["role_none_couldnot_be_created"],
				"type" : ["sys.role"],
				"comment" : "Check that role none could not be created. Couldn't be changed!",
				"role" : "none",
				"validate" : [
					"std:neq(new.id, 'none')"
				]
			}]
		}
		
	]
}