logging:
  file: logs/server.log
  config: classpath:logback-spring.xml
  pattern.console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){yellow} %-5level [%thread]: %message%n%ex{4}"

server:
  port: ${OPENDB_PORT:6463}
  tomcat.max-threads: 5
  connection-timeout: 120000

opendb:
  user: ${OPENDB_LOGIN:openplacereviews:test_1}
  privateKey: ${OPENDB_PK:base64:PKCS#8:MD4CAQAwEAYHKoZIzj0CAQYFK4EEAAoEJzAlAgEBBCAOpUDyGrTPRPDQRCIRXysxC6gCgSTiNQ5nVEjhvsFITA==}

management:
  endpoints:
    web:
      exposure:
        include: "*"
spring:
  jpa:
    properties.hibernate.dialect: org.hibernate.dialect.PostgreSQLDialect
    properties.hibernate.jdbc.lob.non_contextual_creation: true
    hibernate.ddl-auto: update
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/openplacereviews}
    username: ${DB_USER:test}
    password: ${DB_PWD:test}
# classpath:/static/

---
spring.jpa.hibernate.ddl-auto: validate
spring:
  profiles: productions

logging:
  config: classpath:logback-spring.xml

server:
  tomcat.max-threads: 50
  address: ${SERVER_ADDRESS:127.0.0.1} #keep it behind proxy
  tomcat:
    protocol_header: x-forwarded-proto
    remote_ip_header: x-forwarded-for
    accesslog:
      enabled: true
      rotate: false
      pattern: '%h %l %u %t "%r" %s %b %D "%{Referer}i" "%{User-Agent}i"'

